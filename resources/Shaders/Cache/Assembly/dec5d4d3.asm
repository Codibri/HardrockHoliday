//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T ps_5_0 /Zi /Od /Gfp /E PS /Fo
//    \\?\D:\Programmierung\HardrockHoliday\resources\Shaders\Cache\Object\Debug\PS.obj
//    /Fe
//    \\?\D:\Programmierung\HardrockHoliday\resources\Shaders\Cache\Error\PS.txt
//    /Fc
//    \\?\D:\Programmierung\HardrockHoliday\resources\Shaders\Cache\Assembly\dec5d4d3.asm
//    \\?\D:\Programmierung\HardrockHoliday\resources\Shaders\Source\shaders.hlsl
//
//
// Buffer Definitions: 
//
// cbuffer TexInfo
// {
//
//   float4 f4ColorAmbient;             // Offset:    0 Size:    16
//   float fA;                          // Offset:   16 Size:     4
//   float fH;                          // Offset:   20 Size:     4
//   float fBumpStrength;               // Offset:   24 Size:     4
//   float frTransparency;              // Offset:   28 Size:     4
//   float4 f4ColorSSS;                 // Offset:   32 Size:    16
//   float4 f4SSSBRDFParams;            // Offset:   48 Size:    16
//   int aiTexFlag[24];                 // Offset:   64 Size:   372
//
// }
//
// cbuffer ViewportArt
// {
//
//   float4 f4ColorViewportOutline;     // Offset:    0 Size:    16
//   float4 f4FogParams;                // Offset:   16 Size:    16
//   float4x4 mColorModification;       // Offset:   32 Size:    64
//   bool abArt[16];                    // Offset:   96 Size:   244
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// linearSampler                     sampler      NA          NA    0        1
// shadowSampler                   sampler_c      NA          NA    2        1
// shadowMap                         texture  float4          2d   11        1
// tex2D[0]                          texture  float4          2d   12        1
// tex2D[1]                          texture  float4          2d   13        1
// tex2D[2]                          texture  float4          2d   14        1
// tex2D[3]                          texture  float4          2d   15        1
// tex2D[4]                          texture  float4          2d   16        1
// tex2D[5]                          texture  float4          2d   17        1
// tex2D[6]                          texture  float4          2d   18        1
// TexInfo                           cbuffer      NA          NA    1        1
// ViewportArt                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float      w
// TANGENT                  0   xyz         2     NONE  float   xyz 
// LIGHTS                  16      w        2     NONE  float      w
// BITANGENT                0   xyz         3     NONE  float   xyz 
// LIGHTS                  17      w        3     NONE  float      w
// TEXCOORD                 0   xy          4     NONE  float   xy  
// LIGHTS                   4     zw        4     NONE  float     zw
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float      w
// TEXCOORD                 2   xyzw        6     NONE  float   xyzw
// LIGHTS                   0   xyzw        7     NONE  float   xyzw
// LIGHTS                   2   xyzw        8     NONE  float   xyz 
// LIGHTS                   3   xyzw        9     NONE  float   xyzw
// LIGHTS                   6   xyzw       10     NONE   uint   xyz 
// LIGHTS                  10   xyzw       11     NONE   uint   xyzw
// LIGHTS                  11   xyzw       12     NONE  float   xyzw
// LIGHTS                  12   xyzw       13     NONE  float   xyzw
// LIGHTS                  14   xyzw       14     NONE  float   xyz 
// LIGHTS                  15   xyzw       15     NONE  float   xyzw
// LIGHTS                  21   xyzw       16     NONE   uint    yzw
// LIGHTS                  23   xyzw       17     NONE  float   xyzw
// LIGHTS                  24   xyzw       18     NONE  float   xyzw
// LIGHTS                  26   xyzw       19     NONE  float   xyz 
// LIGHTS                  27   xyz        20     NONE  float   xyz 
// LIGHTS                  32   xyzw       21     NONE   uint   x zw
// LIGHTS                  35   xyzw       22     NONE  float   xyzw
// LIGHTS                  36   xyzw       23     NONE  float   xyzw
// LIGHTS                  38   xyzw       24     NONE  float   xyz 
// LIGHTS                  39   xyz        25     NONE  float   xyz 
// LIGHTS                  43   xyzw       26     NONE   uint   xy w
// LIGHTS                  47   xyzw       27     NONE  float   xyzw
// COUNT                    0   x          28     NONE   uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_constantbuffer cb1[28], immediateIndexed
dcl_constantbuffer cb2[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v3.w
dcl_input_ps linear v4.xy
dcl_input_ps linear v4.zw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyzw
dcl_input_ps constant v10.xyz
dcl_input_ps constant v11.xyzw
dcl_input_ps linear v12.xyzw
dcl_input_ps linear v13.xyzw
dcl_input_ps linear v14.xyz
dcl_input_ps linear v15.xyzw
dcl_input_ps constant v16.yzw
dcl_input_ps linear v17.xyzw
dcl_input_ps linear v18.xyzw
dcl_input_ps linear v19.xyz
dcl_input_ps linear v20.xyz
dcl_input_ps constant v21.xzw
dcl_input_ps linear v22.xyzw
dcl_input_ps linear v23.xyzw
dcl_input_ps linear v24.xyz
dcl_input_ps linear v25.xyz
dcl_input_ps constant v26.xyw
dcl_input_ps linear v27.xyzw
dcl_input_ps constant v28.x
dcl_output o0.xyzw
dcl_temps 28

#line 274 "\\?\D:\Programmierung\HardrockHoliday\resources\Shaders\Source\shaders.hlsl"
ilt r0.x, l(1), cb1[26].x
ilt r0.y, l(1), cb1[27].x
or r0.x, r0.y, r0.x
if_nz r0.x

#line 277
  itof r0.x, cb1[24].x  // fxPic<0:[-2.14748e+009f,2.14748e+009f]>
  itof r0.y, cb1[25].x  // fyPic<0:[-2.14748e+009f,2.14748e+009f]>
  itof r0.z, cb1[26].x  // fxPics<0:[-2.14748e+009f,2.14748e+009f]>
  itof r0.w, cb1[27].x  // fyPics<0:[-2.14748e+009f,2.14748e+009f]>
  div r0.x, r0.x, r0.z
  div r0.z, l(1.000000), r0.z
  mul r0.z, r0.z, v4.x
  add r1.x, r0.z, r0.x  // input<13:NaN:Inf>
  div r0.x, r0.y, r0.w
  div r0.y, l(1.000000), r0.w
  mul r0.y, r0.y, v4.y
  add r1.y, r0.y, r0.x  // input<14:NaN:Inf>

#line 274
else 
  mov r1.xy, v4.xyxx  // input<13,14>
endif 

#line 285
mov r1.xy, r1.xyxx  // f2ParallaxTex<0:NaN:Inf,1:NaN:Inf>
ine r0.x, l(0, 0, 0, 0), cb1[20].x
if_nz r0.x
  mov r0.yzw, -v6.xxyz
  add r0.yzw, r0.yyzw, v5.xxyz
  dp3 r1.z, r0.yzwy, r0.yzwy
  rsq r1.z, r1.z
  mul r0.yzw, r0.yyzw, r1.zzzz  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r0.yzw, -r0.yyzw  // f3ViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  dp3 r1.z, v1.xyzx, v1.xyzx
  rsq r1.z, r1.z
  mul r2.xyz, r1.zzzz, v1.xyzx  // f3N<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r3.xyz, r2.zxyz  // f3N<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  mov r4.xyz, v2.xyzx  // f3T<0,1,2>
  mul r5.xyz, r3.zxyz, r4.zxyz
  mul r3.xyz, r3.xyzx, r4.yzxy
  mov r3.xyz, -r3.xyzx
  add r3.xyz, r3.xyzx, r5.xyzx
  mov r3.xyz, -r3.xyzx  // f3B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 297
  dp3 r5.x, r0.yzwy, v2.xyzx  // f3ViewDirTS<0:NaN:Inf>
  dp3 r5.y, r0.yzwy, r3.xyzx  // f3ViewDirTS<1:NaN:Inf>
  dp3 r1.z, r0.yzwy, r2.xyzx  // f3ViewDirTS<2:NaN:Inf>
  mov r2.xy, -r5.xyxx
  mul r2.xy, r2.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000)
  div r1.zw, r2.xxxy, r1.zzzz  // f2MaxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
  dp3 r0.y, r0.yzwy, v1.xyzx
  mul r0.y, r0.y, l(-15.000000)
  add r0.y, r0.y, l(20.000000)
  ftoi r0.y, r0.y  // iSampleCount<0>
  itof r0.z, r0.y
  div r0.z, l(1.000000), r0.z  // fZStep<0:Inf>
  mul r1.zw, r0.zzzz, r1.zzzw  // f2TexStep<0:NaN:Inf,1:NaN:Inf>
  deriv_rtx_coarse r2.xy, r1.xyxx  // f2Dx<0:NaN:Inf,1:NaN:Inf>
  deriv_rty_coarse r2.zw, r1.xxxy  // f2Dy<0:NaN:Inf,1:NaN:Inf>

#line 309
  mov r0.w, l(0)  // iSampleIdx<0: 0>
  mov r5.xy, l(0,0,0,0)  // f2CurTexOffset<0: -0f,1: -0f>

#line 313
  mov r0.z, -r0.z
  add r3.w, r0.z, l(1.000000)  // fCurRayZ<0:Inf>
  mov r4.w, l(1.000000)  // fPrevRayZ<0: 1f>

#line 319
  mov r5.zw, r5.xxxy  // f2CurTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r6.xy, r5.xyxx  // f2PrevTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r6.zw, r5.xxxy  // f2FinalTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r7.x, r0.w  // iSampleIdx<0>
  mov r7.y, r3.w  // fCurRayZ<0:NaN:Inf>
  mov r7.z, r4.w  // fPrevRayZ<0:NaN:Inf>
  mov r7.w, r0.w  // fPrevHeight<0:NaN:Inf>
  loop 
    iadd r8.x, r0.y, l(1)
    ilt r8.y, r7.x, r8.x
    breakc_z r8.y
    add r8.yz, r1.xxyx, r5.zzwz
    sample_d_indexable(texture2d)(float,float,float,float) r8.y, r8.yzyy, t17.xyzw, s0, r2.xyxx, r2.zwzz  // fCurHeight<0:Inf>
    lt r8.z, r7.y, r8.y
    if_nz r8.z
      mov r8.z, -r7.z
      add r8.w, r7.w, r8.z
      mov r9.x, -r8.y
      add r9.x, r7.w, r9.x
      add r9.x, r7.y, r9.x
      add r8.z, r8.z, r9.x
      div r8.z, r8.w, r8.z  // fT<0:NaN:Inf>
      mul r8.zw, r1.zzzw, r8.zzzz
      add r6.zw, r6.xxxy, r8.zzzw  // f2FinalTexOffset<0:NaN:Inf,1:NaN:Inf>
      mov r7.x, r8.x  // iSampleIdx<0>
    else 

#line 332
      iadd r7.x, r7.x, l(1)  // iSampleIdx<0>
      mov r6.xy, r5.zwzz  // f2PrevTexOffset<0:NaN:Inf,1:NaN:Inf>
      mov r7.z, r7.y  // fPrevRayZ<0:NaN:Inf>
      mov r7.w, r8.y  // fPrevHeight<0:Inf>
      add r5.zw, r1.zzzw, r5.zzzw  // f2CurTexOffset<0:NaN:Inf,1:NaN:Inf>
      add r7.y, r0.z, r7.y  // fCurRayZ<0:NaN:Inf>

#line 323
    endif 

#line 319
  endloop 

#line 342
  add r0.yz, r1.xxyx, r6.zzwz  // f2ParallaxTex<0:NaN:Inf,1:NaN:Inf>
  sample_indexable(texture2d)(float,float,float,float) r0.w, r0.yzyy, t17.xzwy, s0  // fHeightX<0:Inf>

#line 347
  mul r2.xyz, r4.xyzx, r0.wwww
  mul r3.xyz, r3.xyzx, r0.wwww
  add r2.xyz, r2.xyzx, r3.xyzx
  add r2.xyz, r2.xyzx, v1.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
  dp3 r0.w, r2.xyzx, r2.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r2.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 287
else 
  mov r2.xyz, v1.xyzx  // input<4,5,6>
  mov r0.yz, r1.xxyx  // f2ParallaxTex<0:NaN:Inf,1:NaN:Inf>
endif 

#line 352
ine r0.w, l(0, 0, 0, 0), cb1[7].x
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.xyxx, t15.zwxy, s0
  mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)  // f3BumpNormal<0:Inf,1:Inf>
  mul r1.zw, r1.zzzw, cb1[1].zzzz  // f3BumpNormal<0:NaN:Inf,1:NaN:Inf>
  mul r3.xyz, r1.zzzz, v2.xyzx
  mul r4.xyz, r1.wwww, v3.xyzx
  add r3.xyz, r3.xyzx, r4.xyzx
  add r3.xyz, r2.xyzx, r3.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
  dp3 r1.z, r3.xyzx, r3.xyzx
  rsq r1.z, r1.z
  mul r2.xyz, r1.zzzz, r3.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 352
endif 

#line 367
resinfo_indexable(texture2d)(float,float,float,float) r1.zw, l(0), t11.zwxy  // fWidth<0:Inf>, fHeight<0:Inf>

#line 370
if_nz v28.x
  mov r3.xyz, v7.yzwy  // alLight<1,2,3>
  mov r4.xyz, v8.xyzx  // alLight<4,5,6>
  mov r5.xyz, v9.xyzx  // alLight<8,9,10>
  mov r6.xyz, v12.xyzx  // alLight<18,19,20>
  mov r2.w, v7.x  // alLight<0>
  mov r3.w, v4.z  // alLight<11>
  mov r4.w, v1.w  // alLight<12>
  mov r5.w, v11.x  // alLight<17>
  mov r6.w, v12.w  // alLight<21>

#line 379
  ieq r5.w, r5.w, l(3)
  if_nz r5.w
    dp3 r5.w, r3.xyzx, r3.xyzx
    rsq r5.w, r5.w
    mul r7.xyz, r3.xyzx, r5.wwww
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r5.xyz, r5.wwww, r5.xyzx
    dp3 r5.x, r7.xyzx, r5.xyzx  // fCosCurAngle<0:NaN:Inf>

#line 384
    lt r5.y, r4.w, r5.x
    not r5.z, r5.y
    if_nz r5.y
      mov r4.w, -r4.w
      add r5.x, r4.w, r5.x
      add r3.w, r3.w, r4.w
      div r3.w, r5.x, r3.w  // fFallOff<0:NaN:Inf>
    else 

#line 390
      mov r3.w, l(1.000000)  // fFallOff<0: 1f>

#line 384
    endif 

#line 395
    if_z r5.z
      if_nz v10.x

#line 398
        div r5.xyw, r6.xyxz, r6.wwww  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 403
        lt r4.w, r5.x, l(-1.000000)
        lt r6.w, l(1.000000), r5.x
        or r4.w, r4.w, r6.w
        lt r6.w, r5.y, l(-1.000000)
        or r4.w, r4.w, r6.w
        lt r6.w, l(1.000000), r5.y
        or r4.w, r4.w, r6.w
        lt r6.w, r5.w, l(0.000000)
        or r4.w, r4.w, r6.w
        lt r6.w, l(3.000000), r5.w
        or r4.w, r4.w, r6.w
        not r6.w, r4.w
        not r6.w, r6.w
        if_z r4.w
          mov r7.xy, -r1.xyxx
          add r7.xy, r0.yzyy, r7.xyxx  // Offset<0:NaN:Inf,1:NaN:Inf>
          mul r7.x, r7.x, l(0.200000)
          mov r7.x, -r7.x
          add r5.x, r5.x, r7.x  // alLight<18:NaN:Inf>
          mul r7.x, r7.y, l(0.200000)
          mov r7.x, -r7.x
          add r5.y, r5.y, r7.x  // alLight<19:NaN:Inf>

#line 412
          mul r5.x, r5.x, l(0.500000)
          add r7.x, r5.x, l(0.500000)  // alLight<18:NaN:Inf>
          mul r5.x, r5.y, l(-0.500000)
          add r7.y, r5.x, l(0.500000)  // alLight<19:NaN:Inf>
          if_nz v10.y

#line 427
            nop 
            mov r5.x, r1.z  // fWidth<0:Inf>
            mov r5.y, r1.w  // fHeight<0:Inf>
            mov r7.zw, r0.yyyz  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 230
            nop 
            mov r7.zw, r7.zzzw  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 224
            dp2 r7.z, r7.zwzz, l(23.140692, 2.665144, 0.000000, 0.000000)
            mul r7.z, r7.z, l(256.000000)
            add r7.z, r7.z, l(0.000000)
            div r7.w, l(123456792.000000), r7.z
            mov r8.x, -r7.w
            max r8.y, r7.w, r8.x
            ge r7.w, r7.w, r8.x
            frc r8.x, r8.y
            mov r8.y, -r8.x
            movc r7.w, r7.w, r8.x, r8.y
            mul r7.z, r7.z, r7.w
            sincos null, r7.z, r7.z
            frc r7.z, r7.z  // RandomGelfond<0:NaN>

#line 230
            mov r7.z, r7.z  // frand<0:NaN>
            add r7.z, r7.z, l(0.500000)
            mul r5.x, r5.x, r7.z
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mul r5.y, r5.y, r7.z
            div r8.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r7.zw, r7.xxxy, r8.xxxy
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t11.xxxx, s2, r5.w
            mul r7.z, r7.z, l(0.800000)
            add r7.z, r7.z, l(0.000000)  // fsum<0:NaN>
            nop 

#line 230
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            div r8.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 

#line 427
            add r8.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 

#line 427
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.w
            mul r8.x, r8.x, l(0.800000)
            add r7.z, r7.z, r8.x  // fsum<0:NaN>
            nop 

#line 230
            nop 
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.w
            mul r8.x, r8.x, l(0.800000)
            add r7.z, r7.z, r8.x  // fsum<0:NaN>
            nop 

#line 230
            nop 

#line 427
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 

#line 427
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            mov r8.y, l(0)  // TexOffset2<1: 0f>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            div r8.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            div r8.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            mov r8.x, l(0)  // TexOffset2<0: 0f>
            div r8.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>
            nop 

#line 230
            nop 
            div r8.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
            div r8.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 427
            add r8.xy, r7.xyxx, r8.xyxx
            sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.w
            mul r7.w, r7.w, l(0.800000)
            add r7.z, r7.w, r7.z  // fsum<0:NaN>

#line 431
            if_nz v10.z

#line 434
              mov r7.w, -r5.w
              max r7.w, r5.w, r7.w
              mul r7.w, r7.w, l(0.100000)
              add r8.x, r7.w, r7.x  // alLight<18:NaN:Inf>
              add r8.y, r7.w, r7.y  // alLight<19:NaN:Inf>

#line 444
              nop 

#line 230
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.zwzz, t11.xxxx, s2, r5.w
              mul r7.w, r7.w, l(0.200000)
              add r7.w, r7.w, r7.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(-1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 444
              add r8.zw, r8.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 444
              add r7.w, r8.z, r7.w  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 444
              add r9.xy, r8.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.xyxx, t11.xxxx, s2, r5.w
              mul r8.w, r8.w, l(0.200000)
              add r7.w, r7.w, r8.w  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 444
              add r9.xy, r8.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.xyxx, t11.xxxx, s2, r5.w
              mul r8.w, r8.w, l(0.200000)
              add r7.w, r7.w, r8.w  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 444
              add r7.w, r8.z, r7.w  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 444
              add r7.w, r8.z, r7.w  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(-1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r8.zw, r8.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r8.zwzz, t11.xxxx, s2, r5.w
              mul r8.z, r8.z, l(0.200000)
              add r7.w, r7.w, r8.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r5.x  // TexOffset2<0:NaN:Inf>
              div r9.y, l(1.000000), r5.y  // TexOffset2<1:NaN:Inf>

#line 444
              add r5.xy, r8.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t11.xxxx, s2, r5.w
              mul r5.x, r5.x, l(0.200000)
              add r7.z, r5.x, r7.w  // fsum<0:NaN>

#line 431
            endif 

#line 451
            div r5.x, r7.z, l(16.000000)  // shadowFactor<0:NaN>

#line 415
          else 

#line 455
            sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t11.xxxx, s2, r5.w
            div r5.x, r5.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 415
          endif 

#line 407
        else 
          mov r5.x, l(1.000000)  // shadowFactor<0: 1f>
        endif 
        or r4.w, r4.w, r6.w

#line 395
      else 

#line 460
        sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t11.xxxx, s2, r6.z
        div r5.x, r5.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
        mov r4.w, l(0)

#line 395
      endif 
    else 
      mov r5.x, l(1.000000)  // shadowFactor<0: 1f>
      mov r4.w, l(-1)
    endif 
    or r4.w, r5.z, r4.w

#line 379
  else 
    mov r3.w, l(1.000000)  // fFallOff<0: 1f>
    mov r5.x, l(1.000000)  // shadowFactor<0: 1f>
    mov r4.w, l(0)
  endif 

#line 464
  if_z r4.w
    dp3 r4.w, r2.xyzx, r2.xyzx
    rsq r4.w, r4.w
    mul r5.yzw, r2.xxyz, r4.wwww
    dp3 r3.x, r3.xyzx, r5.yzwy
    max r3.x, r3.x, l(0.000000)
    min r3.x, r3.x, l(1.000000)
    mul r2.w, r2.w, r3.x
    mul r3.xyz, r4.xyzx, r2.wwww
    mul r3.xyz, r3.wwww, r3.xyzx
    mul r3.xyz, r5.xxxx, r3.xyzx
    add r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 
    mov r3.xyz, l(0,0,0,0)  // f4Diffuse<0: 0f,1: 0f,2: 0f>
  endif 

#line 370
  mov r2.w, l(0)
else 
  mov r3.xyz, l(0,0,0,0)  // f4Diffuse<0: 0f,1: 0f,2: 0f>
  mov r2.w, l(-1)
endif 
not r3.w, r2.w
and r3.w, r3.w, l(-1)
ult r4.x, l(1), v28.x
and r4.y, r3.w, r4.x
if_nz r4.y
  mov r4.yzw, v13.yyzw  // alLight<1,2,3>
  mov r5.xyz, v14.xyzx  // alLight<4,5,6>
  mov r6.xyz, v15.xyzx  // alLight<8,9,10>
  mov r7.xyz, v17.xyzx  // alLight<18,19,20>
  mov r5.w, v13.x  // alLight<0>
  mov r6.w, v2.w  // alLight<11>
  mov r7.w, v3.w  // alLight<12>
  mov r8.x, v16.y  // alLight<17>
  mov r8.y, v17.w  // alLight<21>

#line 375
  if_nz r3.w

#line 379
    ieq r8.x, r8.x, l(3)
    if_nz r8.x
      dp3 r8.x, r4.yzwy, r4.yzwy
      rsq r8.x, r8.x
      mul r8.xzw, r4.yyzw, r8.xxxx
      dp3 r9.x, r6.xyzx, r6.xyzx
      rsq r9.x, r9.x
      mul r6.xyz, r6.xyzx, r9.xxxx
      dp3 r6.x, r8.xzwx, r6.xyzx  // fCosCurAngle<0:NaN:Inf>

#line 384
      lt r6.y, r7.w, r6.x
      not r6.z, r6.y
      if_nz r6.y
        mov r6.y, -r7.w
        add r6.x, r6.y, r6.x
        add r6.y, r6.y, r6.w
        div r6.x, r6.x, r6.y  // fFallOff<0:NaN:Inf>
      else 

#line 390
        mov r6.x, l(1.000000)  // fFallOff<0: 1f>

#line 384
      endif 

#line 395
      if_z r6.z
        if_nz v11.y

#line 398
          div r8.xyz, r7.xyzx, r8.yyyy  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 403
          lt r6.y, r8.x, l(-1.000000)
          lt r6.w, l(1.000000), r8.x
          or r6.y, r6.w, r6.y
          lt r6.w, r8.y, l(-1.000000)
          or r6.y, r6.w, r6.y
          lt r6.w, l(1.000000), r8.y
          or r6.y, r6.w, r6.y
          lt r6.w, r8.z, l(0.000000)
          or r6.y, r6.w, r6.y
          lt r6.w, l(3.000000), r8.z
          or r6.y, r6.w, r6.y
          not r6.w, r6.y
          not r6.w, r6.w
          if_z r6.y
            mov r9.xy, -r1.xyxx
            add r9.xy, r0.yzyy, r9.xyxx  // Offset<0:NaN:Inf,1:NaN:Inf>
            mul r7.w, r9.x, l(0.200000)
            mov r7.w, -r7.w
            add r7.w, r7.w, r8.x  // alLight<18:NaN:Inf>
            mul r8.x, r9.y, l(0.200000)
            mov r8.x, -r8.x
            add r8.x, r8.x, r8.y  // alLight<19:NaN:Inf>

#line 412
            mul r7.w, r7.w, l(0.500000)
            add r9.x, r7.w, l(0.500000)  // alLight<18:NaN:Inf>
            mul r7.w, r8.x, l(-0.500000)
            add r9.y, r7.w, l(0.500000)  // alLight<19:NaN:Inf>
            if_nz v11.z

#line 427
              nop 
              mov r7.w, r1.z  // fWidth<0:Inf>
              mov r8.x, r1.w  // fHeight<0:Inf>
              mov r8.yw, r0.yyyz  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 230
              nop 
              mov r8.yw, r8.yyyw  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 224
              dp2 r8.y, r8.ywyy, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r8.y, r8.y, l(256.000000)
              add r8.y, r8.y, l(0.000000)
              div r8.w, l(123456792.000000), r8.y
              mov r9.z, -r8.w
              max r9.w, r8.w, r9.z
              ge r8.w, r8.w, r9.z
              frc r9.z, r9.w
              mov r9.w, -r9.z
              movc r8.w, r8.w, r9.z, r9.w
              mul r8.y, r8.y, r8.w
              sincos null, r8.y, r8.y
              frc r8.y, r8.y  // RandomGelfond<0:NaN>

#line 230
              mov r8.y, r8.y  // frand<0:NaN>
              add r8.y, r8.y, l(0.500000)
              mul r7.w, r7.w, r8.y
              div r10.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              mul r8.x, r8.y, r8.x
              div r10.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r8.yw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.y, r8.ywyy, t11.xxxx, s2, r8.z
              mul r8.y, r8.y, l(0.800000)
              add r8.y, r8.y, l(0.000000)  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              div r10.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r9.zw, r9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
              mul r9.z, r9.z, l(0.800000)
              add r8.y, r8.y, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
              mul r9.z, r9.z, l(0.800000)
              add r8.y, r8.y, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
              mul r8.w, r8.w, l(0.800000)
              add r8.y, r8.w, r8.y  // fsum<0:NaN>

#line 431
              if_nz v11.w

#line 434
                mov r8.w, -r8.z
                max r8.w, r8.w, r8.z
                mul r8.w, r8.w, l(0.100000)
                add r10.x, r8.w, r9.x  // alLight<18:NaN:Inf>
                add r10.y, r8.w, r9.y  // alLight<19:NaN:Inf>

#line 444
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r8.w, r9.zwzz, t11.xxxx, s2, r8.z
                mul r8.w, r8.w, l(0.200000)
                add r8.w, r8.w, r8.y  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r9.zw, r10.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r8.w, r9.z, r8.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r8.z
                mul r9.w, r9.w, l(0.200000)
                add r8.w, r8.w, r9.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r8.z
                mul r9.w, r9.w, l(0.200000)
                add r8.w, r8.w, r9.w  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r8.w, r9.z, r8.w  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r8.w, r9.z, r8.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r8.z
                mul r9.z, r9.z, l(0.200000)
                add r8.w, r8.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.w  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r8.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r9.zwzz, t11.xxxx, s2, r8.z
                mul r7.w, r7.w, l(0.200000)
                add r8.y, r7.w, r8.w  // fsum<0:NaN>

#line 431
              endif 

#line 451
              div r7.w, r8.y, l(16.000000)  // shadowFactor<0:NaN>

#line 415
            else 

#line 455
              sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r9.xyxx, t11.xxxx, s2, r8.z
              div r7.w, r8.x, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 415
            endif 

#line 407
          else 
            mov r7.w, l(1.000000)  // shadowFactor<0: 1f>
          endif 
          or r6.y, r6.y, r6.w

#line 395
        else 

#line 460
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r7.z
          div r7.w, r6.w, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
          mov r6.y, l(0)

#line 395
        endif 
      else 
        mov r7.w, l(1.000000)  // shadowFactor<0: 1f>
        mov r6.y, l(-1)
      endif 
      or r6.y, r6.z, r6.y

#line 379
    else 
      mov r6.x, l(1.000000)  // fFallOff<0: 1f>
      mov r7.w, l(1.000000)  // shadowFactor<0: 1f>
      mov r6.y, l(0)
    endif 

#line 464
    if_z r6.y
      dp3 r6.y, r2.xyzx, r2.xyzx
      rsq r6.y, r6.y
      mul r6.yzw, r2.xxyz, r6.yyyy
      dp3 r4.y, r4.yzwy, r6.yzwy
      max r4.y, r4.y, l(0.000000)
      min r4.y, r4.y, l(1.000000)
      mul r4.y, r5.w, r4.y
      mul r4.yzw, r5.xxyz, r4.yyyy
      mul r4.yzw, r6.xxxx, r4.yyzw
      mul r4.yzw, r7.wwww, r4.yyzw
      add r3.xyz, r3.xyzx, r4.yzwy  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 375
    mov r4.y, l(0)
    mov r4.z, l(0)
  else 
    mov r4.y, l(-1)
    mov r4.z, l(-1)
  endif 
  and r4.z, r3.w, r4.z
  or r2.w, r2.w, r4.z
  and r3.w, r3.w, r4.y
  iadd r3.w, r3.w, l(0)

#line 370
else 
  mov r3.w, l(0)
  mov r2.w, l(-1)
endif 
not r4.y, r2.w
not r4.z, r3.w
and r4.z, r4.z, r4.y
ult r4.w, l(2), v28.x
and r4.z, r4.z, r4.w
if_nz r4.z
  mov r5.xyz, v18.yzwy  // alLight<1,2,3>
  mov r6.xyz, v19.xyzx  // alLight<4,5,6>
  mov r7.xyz, v20.xyzx  // alLight<8,9,10>
  mov r8.xyz, v22.xyzx  // alLight<18,19,20>
  mov r4.z, v18.x  // alLight<0>
  mov r5.w, v4.w  // alLight<11>
  mov r6.w, v5.w  // alLight<12>
  mov r7.w, v21.z  // alLight<17>
  mov r8.w, v22.w  // alLight<21>

#line 375
  not r9.x, r3.w
  and r4.y, r4.y, r9.x
  if_nz r4.y

#line 379
    ieq r7.w, r7.w, l(3)
    if_nz r7.w
      dp3 r7.w, r5.xyzx, r5.xyzx
      rsq r7.w, r7.w
      mul r9.xyz, r5.xyzx, r7.wwww
      dp3 r7.w, r7.xyzx, r7.xyzx
      rsq r7.w, r7.w
      mul r7.xyz, r7.wwww, r7.xyzx
      dp3 r7.x, r9.xyzx, r7.xyzx  // fCosCurAngle<0:NaN:Inf>

#line 384
      lt r7.y, r6.w, r7.x
      not r7.z, r7.y
      if_nz r7.y
        mov r6.w, -r6.w
        add r7.x, r6.w, r7.x
        add r5.w, r5.w, r6.w
        div r5.w, r7.x, r5.w  // fFallOff<0:NaN:Inf>
      else 

#line 390
        mov r5.w, l(1.000000)  // fFallOff<0: 1f>

#line 384
      endif 

#line 395
      if_z r7.z
        if_nz v16.z

#line 398
          div r7.xyw, r8.xyxz, r8.wwww  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 403
          lt r6.w, r7.x, l(-1.000000)
          lt r8.w, l(1.000000), r7.x
          or r6.w, r6.w, r8.w
          lt r8.w, r7.y, l(-1.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(1.000000), r7.y
          or r6.w, r6.w, r8.w
          lt r8.w, r7.w, l(0.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(3.000000), r7.w
          or r6.w, r6.w, r8.w
          not r8.w, r6.w
          not r8.w, r8.w
          if_z r6.w
            mov r9.xy, -r1.xyxx
            add r9.xy, r0.yzyy, r9.xyxx  // Offset<0:NaN:Inf,1:NaN:Inf>
            mul r9.x, r9.x, l(0.200000)
            mov r9.x, -r9.x
            add r7.x, r7.x, r9.x  // alLight<18:NaN:Inf>
            mul r9.x, r9.y, l(0.200000)
            mov r9.x, -r9.x
            add r7.y, r7.y, r9.x  // alLight<19:NaN:Inf>

#line 412
            mul r7.x, r7.x, l(0.500000)
            add r9.x, r7.x, l(0.500000)  // alLight<18:NaN:Inf>
            mul r7.x, r7.y, l(-0.500000)
            add r9.y, r7.x, l(0.500000)  // alLight<19:NaN:Inf>
            if_nz v16.w

#line 427
              nop 
              mov r7.x, r1.z  // fWidth<0:Inf>
              mov r7.y, r1.w  // fHeight<0:Inf>
              mov r9.zw, r0.yyyz  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 230
              nop 
              mov r9.zw, r9.zzzw  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 224
              dp2 r9.z, r9.zwzz, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r9.z, r9.z, l(256.000000)
              add r9.z, r9.z, l(0.000000)
              div r9.w, l(123456792.000000), r9.z
              mov r10.x, -r9.w
              max r10.y, r9.w, r10.x
              ge r9.w, r9.w, r10.x
              frc r10.x, r10.y
              mov r10.y, -r10.x
              movc r9.w, r9.w, r10.x, r10.y
              mul r9.z, r9.z, r9.w
              sincos null, r9.z, r9.z
              frc r9.z, r9.z  // RandomGelfond<0:NaN>

#line 230
              mov r9.z, r9.z  // frand<0:NaN>
              add r9.z, r9.z, l(0.500000)
              mul r7.x, r7.x, r9.z
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mul r7.y, r7.y, r9.z
              div r10.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.zw, r9.xxxy, r10.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
              mul r9.z, r9.z, l(0.800000)
              add r9.z, r9.z, l(0.000000)  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r10.xy, r9.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r10.x, r10.xyxx, t11.xxxx, s2, r7.w
              mul r10.x, r10.x, l(0.800000)
              add r9.z, r9.z, r10.x  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r10.x, r10.xyxx, t11.xxxx, s2, r7.w
              mul r10.x, r10.x, l(0.800000)
              add r9.z, r9.z, r10.x  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r10.x, l(0)  // TexOffset2<0: 0f>
              div r10.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r10.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
              div r10.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 427
              add r10.xy, r9.xyxx, r10.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
              mul r9.w, r9.w, l(0.800000)
              add r9.z, r9.w, r9.z  // fsum<0:NaN>

#line 431
              if_nz v21.x

#line 434
                mov r9.w, -r7.w
                max r9.w, r7.w, r9.w
                mul r9.w, r9.w, l(0.100000)
                add r10.x, r9.w, r9.x  // alLight<18:NaN:Inf>
                add r10.y, r9.w, r9.y  // alLight<19:NaN:Inf>

#line 444
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.zwzz, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r9.w, r9.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(-1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r10.zw, r10.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r9.w, r10.z, r9.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r11.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.w, r11.xyxx, t11.xxxx, s2, r7.w
                mul r10.w, r10.w, l(0.200000)
                add r9.w, r9.w, r10.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r11.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.w, r11.xyxx, t11.xxxx, s2, r7.w
                mul r10.w, r10.w, l(0.200000)
                add r9.w, r9.w, r10.w  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r9.w, r10.z, r9.w  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r9.w, r10.z, r9.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                mov r11.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(-1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r11.x, l(0)  // TexOffset2<0: 0f>
                div r11.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r10.zw, r10.xxxy, r11.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r10.z, r10.zwzz, t11.xxxx, s2, r7.w
                mul r10.z, r10.z, l(0.200000)
                add r9.w, r9.w, r10.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r11.x, l(1.000000), r7.x  // TexOffset2<0:NaN:Inf>
                div r11.y, l(1.000000), r7.y  // TexOffset2<1:NaN:Inf>

#line 444
                add r7.xy, r10.xyxx, r11.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r7.w
                mul r7.x, r7.x, l(0.200000)
                add r9.z, r7.x, r9.w  // fsum<0:NaN>

#line 431
              endif 

#line 451
              div r7.x, r9.z, l(16.000000)  // shadowFactor<0:NaN>

#line 415
            else 

#line 455
              sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r9.xyxx, t11.xxxx, s2, r7.w
              div r7.x, r7.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 415
            endif 

#line 407
          else 
            mov r7.x, l(1.000000)  // shadowFactor<0: 1f>
          endif 
          or r6.w, r6.w, r8.w

#line 395
        else 

#line 460
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r8.z
          div r7.x, r7.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
          mov r6.w, l(0)

#line 395
        endif 
      else 
        mov r7.x, l(1.000000)  // shadowFactor<0: 1f>
        mov r6.w, l(-1)
      endif 
      or r6.w, r7.z, r6.w

#line 379
    else 
      mov r5.w, l(1.000000)  // fFallOff<0: 1f>
      mov r7.x, l(1.000000)  // shadowFactor<0: 1f>
      mov r6.w, l(0)
    endif 

#line 464
    if_z r6.w
      dp3 r6.w, r2.xyzx, r2.xyzx
      rsq r6.w, r6.w
      mul r7.yzw, r2.xxyz, r6.wwww
      dp3 r5.x, r5.xyzx, r7.yzwy
      max r5.x, r5.x, l(0.000000)
      min r5.x, r5.x, l(1.000000)
      mul r4.z, r4.z, r5.x
      mul r5.xyz, r6.xyzx, r4.zzzz
      mul r5.xyz, r5.wwww, r5.xyzx
      mul r5.xyz, r7.xxxx, r5.xyzx
      add r3.xyz, r3.xyzx, r5.xyzx  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 375
    mov r4.z, l(0)
    mov r5.x, l(0)
  else 
    mov r4.z, l(-1)
    mov r5.x, l(-1)
  endif 
  and r5.x, r4.y, r5.x
  or r2.w, r2.w, r5.x
  and r4.y, r4.z, r4.y
  or r3.w, r3.w, r4.y

#line 370
else 
  mov r2.w, l(-1)
endif 
not r2.w, r2.w
not r4.y, r3.w
and r4.y, r2.w, r4.y
ult r4.z, l(3), v28.x
and r4.y, r4.y, r4.z
if_nz r4.y
  mov r5.xyz, v23.yzwy  // alLight<1,2,3>
  mov r6.xyz, v24.xyzx  // alLight<4,5,6>
  mov r7.xyz, v25.xyzx  // alLight<8,9,10>
  mov r8.xyz, v27.xyzx  // alLight<18,19,20>
  mov r4.y, v23.x  // alLight<0>
  mov r5.w, v9.w  // alLight<11>
  mov r6.w, v15.w  // alLight<12>
  mov r7.w, v26.w  // alLight<17>
  mov r8.w, v27.w  // alLight<21>

#line 375
  not r9.x, r3.w
  and r2.w, r2.w, r9.x
  if_nz r2.w

#line 379
    ieq r7.w, r7.w, l(3)
    if_nz r7.w
      dp3 r7.w, r5.xyzx, r5.xyzx
      rsq r7.w, r7.w
      mul r9.xyz, r5.xyzx, r7.wwww
      dp3 r7.w, r7.xyzx, r7.xyzx
      rsq r7.w, r7.w
      mul r7.xyz, r7.wwww, r7.xyzx
      dp3 r7.x, r9.xyzx, r7.xyzx  // fCosCurAngle<0:NaN:Inf>

#line 384
      lt r7.y, r6.w, r7.x
      not r7.z, r7.y
      if_nz r7.y
        mov r6.w, -r6.w
        add r7.x, r6.w, r7.x
        add r5.w, r5.w, r6.w
        div r5.w, r7.x, r5.w  // fFallOff<0:NaN:Inf>
      else 

#line 390
        mov r5.w, l(1.000000)  // fFallOff<0: 1f>

#line 384
      endif 

#line 395
      if_z r7.z
        if_nz v21.w

#line 398
          div r7.xyw, r8.xyxz, r8.wwww  // alLight<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>

#line 403
          lt r6.w, r7.x, l(-1.000000)
          lt r8.w, l(1.000000), r7.x
          or r6.w, r6.w, r8.w
          lt r8.w, r7.y, l(-1.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(1.000000), r7.y
          or r6.w, r6.w, r8.w
          lt r8.w, r7.w, l(0.000000)
          or r6.w, r6.w, r8.w
          lt r8.w, l(3.000000), r7.w
          or r6.w, r6.w, r8.w
          not r8.w, r6.w
          not r8.w, r8.w
          if_z r6.w
            mov r1.xy, -r1.xyxx
            add r1.xy, r0.yzyy, r1.xyxx  // Offset<0:NaN:Inf,1:NaN:Inf>
            mul r1.x, r1.x, l(0.200000)
            mov r1.x, -r1.x
            add r1.x, r1.x, r7.x  // alLight<18:NaN:Inf>
            mul r1.y, r1.y, l(0.200000)
            mov r1.y, -r1.y
            add r1.y, r1.y, r7.y  // alLight<19:NaN:Inf>

#line 412
            mul r1.x, r1.x, l(0.500000)
            add r7.x, r1.x, l(0.500000)  // alLight<18:NaN:Inf>
            mul r1.x, r1.y, l(-0.500000)
            add r7.y, r1.x, l(0.500000)  // alLight<19:NaN:Inf>
            if_nz v26.x

#line 427
              nop 
              mov r1.z, r1.z  // fWidth<0:Inf>
              mov r1.w, r1.w  // fHeight<0:Inf>
              mov r1.xy, r0.yzyy  // f2Pos<0:NaN:Inf,1:NaN:Inf>

#line 230
              nop 
              mov r1.xy, r1.xyxx  // f2p<0:NaN:Inf,1:NaN:Inf>

#line 224
              dp2 r1.x, r1.xyxx, l(23.140692, 2.665144, 0.000000, 0.000000)
              mul r1.x, r1.x, l(256.000000)
              add r1.x, r1.x, l(0.000000)
              div r1.y, l(123456792.000000), r1.x
              mov r9.x, -r1.y
              max r9.y, r1.y, r9.x
              ge r1.y, r1.y, r9.x
              frc r9.x, r9.y
              mov r9.y, -r9.x
              movc r1.y, r1.y, r9.x, r9.y
              mul r1.x, r1.x, r1.y
              sincos null, r1.x, r1.x
              frc r1.x, r1.x  // RandomGelfond<0:NaN>

#line 230
              mov r1.x, r1.x  // frand<0:NaN>
              add r1.x, r1.x, l(0.500000)
              mul r1.y, r1.x, r1.z
              div r9.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              mul r1.x, r1.x, r1.w
              div r9.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r1.zw, r7.xxxy, r9.xxxy
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t11.xxxx, s2, r7.w
              mul r1.z, r1.z, l(0.800000)
              add r1.z, r1.z, l(0.000000)  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              div r9.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r9.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.x, r9.xyxx, t11.xxxx, s2, r7.w
              mul r9.x, r9.x, l(0.800000)
              add r1.z, r1.z, r9.x  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r9.x, r9.xyxx, t11.xxxx, s2, r7.w
              mul r9.x, r9.x, l(0.800000)
              add r1.z, r1.z, r9.x  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 

#line 427
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              mov r9.y, l(0)  // TexOffset2<1: 0f>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              div r9.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              mov r9.x, l(0)  // TexOffset2<0: 0f>
              div r9.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>
              nop 

#line 230
              nop 
              div r9.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
              div r9.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 427
              add r9.xy, r7.xyxx, r9.xyxx
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.xyxx, t11.xxxx, s2, r7.w
              mul r1.w, r1.w, l(0.800000)
              add r1.z, r1.w, r1.z  // fsum<0:NaN>

#line 431
              if_nz v26.y

#line 434
                mov r1.w, -r7.w
                max r1.w, r1.w, r7.w
                mul r1.w, r1.w, l(0.100000)
                add r9.x, r1.w, r7.x  // alLight<18:NaN:Inf>
                add r9.y, r1.w, r7.y  // alLight<19:NaN:Inf>

#line 444
                nop 

#line 230
                nop 
                div r10.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                div r10.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r9.zwzz, t11.xxxx, s2, r7.w
                mul r1.w, r1.w, l(0.200000)
                add r1.w, r1.w, r1.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r10.x, l(0)  // TexOffset2<0: 0f>
                div r10.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r10.x, l(0)  // TexOffset2<0: 0f>
                div r10.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r10.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                div r10.y, l(-1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r10.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r9.zw, r9.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r1.w, r9.z, r1.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r10.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r10.xy, r9.xyxx, r10.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r1.w, r1.w, r9.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r10.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r10.xy, r9.xyxx, r10.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t11.xxxx, s2, r7.w
                mul r9.w, r9.w, l(0.200000)
                add r1.w, r1.w, r9.w  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r1.w, r9.z, r1.w  // fsum<0:NaN>
                nop 

#line 230
                nop 

#line 444
                add r1.w, r9.z, r1.w  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r10.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                mov r10.y, l(0)  // TexOffset2<1: 0f>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r10.x, l(-1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                div r10.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r10.x, l(0)  // TexOffset2<0: 0f>
                div r10.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                mov r10.x, l(0)  // TexOffset2<0: 0f>
                div r10.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r9.zw, r9.xxxy, r10.xxxy
                sample_c_lz_indexable(texture2d)(float,float,float,float) r9.z, r9.zwzz, t11.xxxx, s2, r7.w
                mul r9.z, r9.z, l(0.200000)
                add r1.w, r1.w, r9.z  // fsum<0:NaN>
                nop 

#line 230
                nop 
                div r10.x, l(1.000000), r1.y  // TexOffset2<0:NaN:Inf>
                div r10.y, l(1.000000), r1.x  // TexOffset2<1:NaN:Inf>

#line 444
                add r1.xy, r9.xyxx, r10.xyxx
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t11.xxxx, s2, r7.w
                mul r1.x, r1.x, l(0.200000)
                add r1.z, r1.x, r1.w  // fsum<0:NaN>

#line 431
              endif 

#line 451
              div r1.x, r1.z, l(16.000000)  // shadowFactor<0:NaN>

#line 415
            else 

#line 455
              sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r7.xyxx, t11.xxxx, s2, r7.w
              div r1.x, r1.y, l(4.000000)  // shadowFactor<0:[0f,0.25f]>

#line 415
            endif 

#line 407
          else 
            mov r1.x, l(1.000000)  // shadowFactor<0: 1f>
          endif 
          or r1.y, r6.w, r8.w

#line 395
        else 

#line 460
          sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r8.xyxx, t11.xxxx, s2, r8.z
          div r1.x, r1.z, l(4.000000)  // shadowFactor<0:[0f,0.25f]>
          mov r1.y, l(0)

#line 395
        endif 
      else 
        mov r1.x, l(1.000000)  // shadowFactor<0: 1f>
        mov r1.y, l(-1)
      endif 
      or r1.y, r7.z, r1.y

#line 379
    else 
      mov r5.w, l(1.000000)  // fFallOff<0: 1f>
      mov r1.x, l(1.000000)  // shadowFactor<0: 1f>
      mov r1.y, l(0)
    endif 

#line 464
    if_z r1.y
      dp3 r1.y, r2.xyzx, r2.xyzx
      rsq r1.y, r1.y
      mul r1.yzw, r1.yyyy, r2.xxyz
      dp3 r1.y, r5.xyzx, r1.yzwy
      max r1.y, r1.y, l(0.000000)
      min r1.y, r1.y, l(1.000000)
      mul r1.y, r4.y, r1.y
      mul r1.yzw, r6.xxyz, r1.yyyy
      mul r1.yzw, r5.wwww, r1.yyzw
      mul r1.xyz, r1.xxxx, r1.yzwy
      add r3.xyz, r1.xyzx, r3.xyzx  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 375
    mov r1.x, l(0)
  else 
    mov r1.x, l(-1)
  endif 
  and r1.x, r1.x, r2.w
  or r3.w, r3.w, r1.x

#line 370
endif 
retc_nz r3.w

#line 497
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.yzyy, t12.wxyz, s0  // f4TexCol<3:Inf,0:Inf,1:Inf,2:Inf>

#line 591
mov r5.xyz, -v6.xyzx

#line 486
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r0.yzyy, t14.xyzw, s0

#line 591
add r5.xyz, r5.xyzx, v5.xyzx

#line 576
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r0.yzyy, t13.xyzw, s0

#line 591
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r3.w, r2.w
mul r5.xyz, r3.wwww, r5.xyzx  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r3.w, r5.xyzx, r2.xyzx
add r4.y, r3.w, r3.w
mov r4.y, -r4.y
mul r8.xy, r2.xyxx, r4.yyyy
add r8.xy, r5.xyxx, r8.xyxx  // f3Reflection<0:NaN:Inf,1:NaN:Inf>
mul r4.y, r3.w, r3.w
mov r4.y, -r4.y
add r4.y, r4.y, l(1.000000)
mul r4.y, r4.y, l(0.980100)
mov r4.y, -r4.y
add r4.y, r4.y, l(1.000000)
sqrt r5.w, r4.y
mul r6.w, r3.w, l(0.990000)
add r5.w, r5.w, r6.w
ge r4.y, r4.y, l(0.000000)
mul r8.zw, r5.xxxy, l(0.000000, 0.000000, 0.990000, 0.990000)
mul r9.xy, r2.xyxx, r5.wwww
mov r9.xy, -r9.xyxx
add r8.zw, r8.zzzw, r9.xxxy
movc r8.zw, r4.yyyy, r8.zzzw, l(0,0,0,0)  // f3Refraction<0:NaN:Inf,1:NaN:Inf>
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r8.zwzz, t16.xyzw, s0  // f4RefrColor<0:Inf,1:Inf,2:Inf,3:Inf>
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t16.xyzw, s0  // f4ReflColor<0:Inf,1:Inf,2:Inf,3:Inf>

#line 616
mov r10.xyz, v7.yzwy  // alLight<1,2,3>
mov r10.xyz, r10.xyzx  // f3LightDir<0,1,2>
mov r11.xyz, v13.yzwy  // alLight<1,2,3>

#line 621
mov r2.xyz, r2.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
mov r12.xyz, v5.xyzx  // input<15,16,17>
mov r13.xyz, v6.xyzx  // input<18,19,20>
mov r10.xyz, r10.xyzx  // f3LightDir<0,1,2>

#line 256
mov r14.xyz, r2.xyzx  // f3Nn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r13.xyz, -r13.xyzx
add r12.xyz, r12.xyzx, r13.xyzx
dp3 r4.y, r12.xyzx, r12.xyzx
rsq r4.y, r4.y
mul r12.xyz, r4.yyyy, r12.xyzx  // f3Vn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r4.y, r10.xyzx, r10.xyzx
rsq r4.y, r4.y
mul r10.xyz, r4.yyyy, r10.xyzx  // f3Ln<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
add r13.xyz, r10.xyzx, r12.xyzx
dp3 r4.y, r13.xyzx, r13.xyzx
rsq r4.y, r4.y
mul r13.xyz, r4.yyyy, r13.xyzx  // f3Hn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r4.y, r13.xyzx, r10.xyzx
div r4.y, r4.y, l(2.000000)
add r15.x, r4.y, l(0.500000)  // f2huv<0:NaN:Inf>
dp3 r4.y, r14.xyzx, r13.xyzx
div r4.y, r4.y, l(2.000000)
add r4.y, r4.y, l(0.500000)
mov r4.y, -r4.y
add r15.y, r4.y, l(1.000000)  // f2huv<1:NaN:Inf>
dp3 r4.y, r10.xyzx, r14.xyzx
div r4.y, r4.y, l(2.000000)
add r10.x, r4.y, l(0.500000)  // f2nuv<0:NaN:Inf>
dp3 r4.y, r14.xyzx, r12.xyzx
div r4.y, r4.y, l(2.000000)
add r4.y, r4.y, l(0.500000)
mov r4.y, -r4.y
add r10.y, r4.y, l(1.000000)  // f2nuv<1:NaN:Inf>
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r15.xyxx, t17.xyzw, s0  // f3ht<0:Inf,1:Inf,2:Inf>
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r10.xyxx, t15.xyzw, s0  // f3nt<0:Inf,1:Inf,2:Inf>

#line 617
mov r11.xyz, r11.xyzx  // f3LightDir<0,1,2>
mov r15.xyz, v18.yzwy  // alLight<1,2,3>

#line 621
mov r16.xyz, r11.xyzx  // f3LightDir<0,1,2>

#line 258
dp3 r5.w, r16.xyzx, r16.xyzx
rsq r5.w, r5.w
mul r16.xyz, r5.wwww, r16.xyzx  // f3Ln<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
add r17.xyz, r12.xyzx, r16.xyzx
dp3 r5.w, r17.xyzx, r17.xyzx
rsq r5.w, r5.w
mul r17.xyz, r5.wwww, r17.xyzx  // f3Hn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r5.w, r17.xyzx, r16.xyzx
div r5.w, r5.w, l(2.000000)
add r18.x, r5.w, l(0.500000)  // f2huv<0:NaN:Inf>
dp3 r5.w, r14.xyzx, r17.xyzx
div r5.w, r5.w, l(2.000000)
add r5.w, r5.w, l(0.500000)
mov r5.w, -r5.w
add r18.y, r5.w, l(1.000000)  // f2huv<1:NaN:Inf>
dp3 r5.w, r16.xyzx, r14.xyzx
div r5.w, r5.w, l(2.000000)
add r16.x, r5.w, l(0.500000)  // f2nuv<0:NaN:Inf>
add r16.y, r4.y, l(1.000000)  // f2nuv<1:NaN:Inf>
sample_indexable(texture2d)(float,float,float,float) r17.xyz, r18.xyxx, t17.xyzw, s0  // f3ht<0:Inf,1:Inf,2:Inf>
sample_indexable(texture2d)(float,float,float,float) r16.xyz, r16.xyxx, t15.xyzw, s0  // f3nt<0:Inf,1:Inf,2:Inf>

#line 617
mov r15.xyz, r15.xyzx  // f3LightDir<0,1,2>
mov r18.xyz, v23.yzwy  // alLight<1,2,3>

#line 621
mov r19.xyz, r15.xyzx  // f3LightDir<0,1,2>

#line 258
dp3 r5.w, r19.xyzx, r19.xyzx
rsq r5.w, r5.w
mul r19.xyz, r5.wwww, r19.xyzx  // f3Ln<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
add r20.xyz, r12.xyzx, r19.xyzx
dp3 r5.w, r20.xyzx, r20.xyzx
rsq r5.w, r5.w
mul r20.xyz, r5.wwww, r20.xyzx  // f3Hn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r5.w, r20.xyzx, r19.xyzx
div r5.w, r5.w, l(2.000000)
add r21.x, r5.w, l(0.500000)  // f2huv<0:NaN:Inf>
dp3 r5.w, r14.xyzx, r20.xyzx
div r5.w, r5.w, l(2.000000)
add r5.w, r5.w, l(0.500000)
mov r5.w, -r5.w
add r21.y, r5.w, l(1.000000)  // f2huv<1:NaN:Inf>
dp3 r5.w, r19.xyzx, r14.xyzx
div r5.w, r5.w, l(2.000000)
add r19.x, r5.w, l(0.500000)  // f2nuv<0:NaN:Inf>
add r19.y, r4.y, l(1.000000)  // f2nuv<1:NaN:Inf>
sample_indexable(texture2d)(float,float,float,float) r20.xyz, r21.xyxx, t17.xyzw, s0  // f3ht<0:Inf,1:Inf,2:Inf>
sample_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t15.xyzw, s0  // f3nt<0:Inf,1:Inf,2:Inf>

#line 617
mov r18.xyz, r18.xyzx  // f3LightDir<0,1,2>

#line 637
sample_indexable(texture2d)(float,float,float,float) r21.xyz, r0.yzyy, t18.xyzw, s0

#line 621
mov r22.xyz, r18.xyzx  // f3LightDir<0,1,2>

#line 258
dp3 r5.w, r22.xyzx, r22.xyzx
rsq r5.w, r5.w
mul r22.xyz, r5.wwww, r22.xyzx  // f3Ln<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
add r12.xyz, r12.xyzx, r22.xyzx
dp3 r5.w, r12.xyzx, r12.xyzx
rsq r5.w, r5.w
mul r12.xyz, r5.wwww, r12.xyzx  // f3Hn<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp3 r5.w, r12.xyzx, r22.xyzx
div r5.w, r5.w, l(2.000000)
add r23.x, r5.w, l(0.500000)  // f2huv<0:NaN:Inf>
dp3 r5.w, r14.xyzx, r12.xyzx
div r5.w, r5.w, l(2.000000)
add r5.w, r5.w, l(0.500000)
mov r5.w, -r5.w
add r23.y, r5.w, l(1.000000)  // f2huv<1:NaN:Inf>
dp3 r5.w, r22.xyzx, r14.xyzx
div r5.w, r5.w, l(2.000000)
add r12.x, r5.w, l(0.500000)  // f2nuv<0:NaN:Inf>
add r12.y, r4.y, l(1.000000)  // f2nuv<1:NaN:Inf>
sample_indexable(texture2d)(float,float,float,float) r22.xyz, r23.xyxx, t17.xyzw, s0  // f3ht<0:Inf,1:Inf,2:Inf>
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r12.xyxx, t15.xyzw, s0  // f3nt<0:Inf,1:Inf,2:Inf>

#line 466
mul r3.xyz, r3.xyzx, cb1[1].yyyy
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // f4Diffuse<0:[0f,1f],1:[0f,1f],2:[0f,1f]>

#line 473
ine r4.y, l(0, 0, 0, 0), cb1[6].x
if_nz r4.y

#line 476
  if_nz v28.x
    dp3 r4.y, v7.yzwy, v7.yzwy
    rsq r4.y, r4.y
    mul r23.xyz, r4.yyyy, v7.yzwy
    add r23.xyz, r5.xyzx, r23.xyzx
    dp3 r4.y, r23.xyzx, r23.xyzx
    rsq r4.y, r4.y
    mul r23.xyz, r4.yyyy, r23.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.y, r2.xyzx, r2.xyzx
    rsq r4.y, r4.y
    mul r24.xyz, r2.xyzx, r4.yyyy
    dp3 r4.y, r24.xyzx, r23.xyzx
    max r4.y, r4.y, l(0.000000)
    min r4.y, r4.y, l(1.000000)
    log r4.y, r4.y
    mul r4.y, r4.y, cb1[1].x
    exp r4.y, r4.y
    add r4.y, r4.y, l(0.000000)  // fSpecular<0:NaN:Inf>

#line 476
  else 
    mov r4.y, l(0)  // fSpecular<0: 0f>
  endif 
  if_nz r4.x
    dp3 r5.w, v13.yzwy, v13.yzwy
    rsq r5.w, r5.w
    mul r23.xyz, r5.wwww, v13.yzwy
    add r23.xyz, r5.xyzx, r23.xyzx
    dp3 r5.w, r23.xyzx, r23.xyzx
    rsq r5.w, r5.w
    mul r23.xyz, r5.wwww, r23.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.w, r2.xyzx, r2.xyzx
    rsq r5.w, r5.w
    mul r24.xyz, r2.xyzx, r5.wwww
    dp3 r5.w, r24.xyzx, r23.xyzx
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)
    log r5.w, r5.w
    mul r5.w, r5.w, cb1[1].x
    exp r5.w, r5.w
    add r4.y, r4.y, r5.w  // fSpecular<0:NaN:Inf>

#line 476
  endif 
  if_nz r4.w
    dp3 r5.w, v18.yzwy, v18.yzwy
    rsq r5.w, r5.w
    mul r23.xyz, r5.wwww, v18.yzwy
    add r23.xyz, r5.xyzx, r23.xyzx
    dp3 r5.w, r23.xyzx, r23.xyzx
    rsq r5.w, r5.w
    mul r23.xyz, r5.wwww, r23.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.w, r2.xyzx, r2.xyzx
    rsq r5.w, r5.w
    mul r24.xyz, r2.xyzx, r5.wwww
    dp3 r5.w, r24.xyzx, r23.xyzx
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)
    log r5.w, r5.w
    mul r5.w, r5.w, cb1[1].x
    exp r5.w, r5.w
    add r4.y, r4.y, r5.w  // fSpecular<0:NaN:Inf>

#line 476
  endif 
  if_nz r4.z
    dp3 r5.w, v23.yzwy, v23.yzwy
    rsq r5.w, r5.w
    mul r23.xyz, r5.wwww, v23.yzwy
    add r23.xyz, r5.xyzx, r23.xyzx
    dp3 r5.w, r23.xyzx, r23.xyzx
    rsq r5.w, r5.w
    mul r23.xyz, r5.wwww, r23.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.w, r2.xyzx, r2.xyzx
    rsq r5.w, r5.w
    mul r2.xyz, r2.xyzx, r5.wwww
    dp3 r2.x, r2.xyzx, r23.xyzx
    max r2.x, r2.x, l(0.000000)
    min r2.x, r2.x, l(1.000000)
    log r2.x, r2.x
    mul r2.x, r2.x, cb1[1].x
    exp r2.x, r2.x
    add r4.y, r2.x, r4.y  // fSpecular<0:NaN:Inf>

#line 476
  endif 

#line 481
  ine r2.x, l(0, 0, 0, 0), cb1[14].x
  if_nz r2.x
    mul r2.xyz, r3.xyzx, r4.yyyy
    mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  else 
    ine r5.w, l(0, 0, 0, 0), cb1[10].x
    if_nz r5.w
      mul r23.xyz, r1.yzwy, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r24.xyz, r3.xyzx, r4.yyyy
      mul r2.xyz, r23.xyzx, r24.xyzx  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    else 

#line 486
      mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r23.xyz, r3.xyzx, r4.yyyy
      mul r2.xyz, r6.xyzx, r23.xyzx  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 483
    endif 
  endif 

#line 473
else 

#line 490
  mov r2.xyz, l(0,0,0,0)  // f4SpecCol<0: 0f,1: 0f,2: 0f>

#line 473
endif 

#line 496
ine r4.y, l(0, 0, 0, 0), cb1[4].x
if_nz r4.y
  mov r6.xyz, r1.yzwy  // f4TexCol<0:Inf,1:Inf,2:Inf>
else 
  ine r5.w, l(0, 0, 0, 0), cb1[8].x
  if_nz r5.w
    mov r6.xyz, l(0,0,0,0)  // f4TexCol<0: 0f,1: 0f,2: 0f>
    mov r1.x, l(0)  // f4TexCol<3: 0f>
  else 

#line 501
    mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // f4TexCol<0: 1f,1: 1f,2: 1f>
    mov r1.x, l(1.000000)  // f4TexCol<3: 1f>

#line 498
  endif 
endif 

#line 504
ine r5.w, l(0, 0, 0, 0), cb1[18].x
if_nz r5.w

#line 508
  resinfo_indexable(texture2d)(float,float,float,float)_uint r23.xy, l(0), t12.xyzw  // iWidth<0>, iHeight<0>, iLevels<0>

#line 511
  utof r5.w, r23.x
  mul r24.x, r0.y, r5.w  // f2TexCoord2<0:NaN:Inf>
  utof r0.y, r23.y
  mul r24.y, r0.y, r0.z  // f2TexCoord2<1:NaN:Inf>

#line 516
  ld_indexable(texture2d)(float,float,float,float) r23.xyz, l(0, 0, 0, 0), t12.xyzw  // f4ChromaKey<0:Inf,1:Inf,2:Inf,3:Inf>

#line 525
  add r0.yz, r24.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)  // f2TexPos1<0:NaN:Inf,1:NaN:Inf>
  add r24.zw, r24.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)  // f2TexPos2<0:NaN:Inf,1:NaN:Inf>
  add r25.xy, r24.xyxx, l(-0.500000, 0.500000, 0.000000, 0.000000)  // f2TexPos3<0:NaN:Inf,1:NaN:Inf>
  add r24.xy, r24.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // f2TexPos4<0:NaN:Inf,1:NaN:Inf>
  ftoi r26.xy, r0.yzyy
  mov r26.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r26.xyzw, r26.xyzw, t12.xyzw  // f4Col1<0:Inf,1:Inf,2:Inf,3:Inf>
  ftoi r27.xy, r24.zwzz
  mov r27.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r27.xyzw, r27.xyzw, t12.xyzw  // f4Col2<0:Inf,1:Inf,2:Inf,3:Inf>
  ftoi r25.xy, r25.xyxx
  mov r25.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r25.xyzw, r25.xyzw, t12.xyzw  // f4Col3<0:Inf,1:Inf,2:Inf,3:Inf>
  ftoi r24.xy, r24.xyxx
  mov r24.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r24.xyzw, r24.xyzw, t12.xyzw  // f4Col4<0:Inf,1:Inf,2:Inf,3:Inf>
  eq r5.w, r26.x, r23.x
  eq r6.w, r26.y, r23.y
  and r5.w, r5.w, r6.w
  eq r6.w, r26.z, r23.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r26.x, l(0)  // f4Col1<0: 0f>
    mov r26.y, l(0)  // f4Col1<1: 0f>
    mov r26.z, l(0)  // f4Col1<2: 0f>
    mov r26.w, l(0)  // f4Col1<3: 0f>
  endif 
  eq r5.w, r27.x, r23.x
  eq r6.w, r27.y, r23.y
  and r5.w, r5.w, r6.w
  eq r6.w, r27.z, r23.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r27.xyzw, l(0,0,0,0)  // f4Col2<0: 0f,1: 0f,2: 0f,3: 0f>
  endif 
  eq r5.w, r25.x, r23.x
  eq r6.w, r25.y, r23.y
  and r5.w, r5.w, r6.w
  eq r6.w, r25.z, r23.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r25.x, l(0)  // f4Col3<0: 0f>
    mov r25.y, l(0)  // f4Col3<1: 0f>
    mov r25.z, l(0)  // f4Col3<2: 0f>
    mov r25.w, l(0)  // f4Col3<3: 0f>
  endif 

#line 536
  eq r5.w, r24.x, r23.x
  eq r6.w, r24.y, r23.y
  and r5.w, r5.w, r6.w
  eq r6.w, r24.z, r23.z
  and r5.w, r5.w, r6.w
  if_nz r5.w
    mov r24.xyzw, l(0,0,0,0)  // f4Col4<0: 0f,1: 0f,2: 0f,3: 0f>
  endif 
  frc r0.y, r0.y  // f2TexPos1<0:NaN>
  frc r0.z, r0.z  // f2TexPos1<1:NaN>

#line 540
  mov r5.w, -r26.w
  add r5.w, r5.w, r27.w
  mul r5.w, r0.y, r5.w
  add r5.w, r26.w, r5.w  // fAlpha<0:NaN:Inf>
  mov r6.w, -r25.w
  add r6.w, r6.w, r24.w
  mul r6.w, r0.y, r6.w
  add r6.w, r25.w, r6.w
  mov r7.w, -r5.w
  add r6.w, r6.w, r7.w
  mul r6.w, r0.z, r6.w
  add r1.x, r5.w, r6.w  // fAlpha<0:NaN:Inf>

#line 550
  mov r5.w, -r26.x
  add r5.w, r5.w, r27.x
  mul r5.w, r0.y, r5.w
  add r5.w, r26.x, r5.w  // f4Col1<0:NaN:Inf>
  mov r6.w, -r26.y
  add r6.w, r6.w, r27.y
  mul r6.w, r0.y, r6.w
  add r6.w, r26.y, r6.w  // f4Col1<1:NaN:Inf>
  mov r7.w, -r26.z
  add r7.w, r7.w, r27.z
  mul r7.w, r0.y, r7.w
  add r7.w, r26.z, r7.w  // f4Col1<2:NaN:Inf>

#line 555
  mov r8.w, -r25.x
  add r8.w, r8.w, r24.x
  mul r8.w, r0.y, r8.w
  add r8.w, r25.x, r8.w  // f4Col3<0:NaN:Inf>
  mov r9.w, -r25.y
  add r9.w, r9.w, r24.y
  mul r9.w, r0.y, r9.w
  add r9.w, r25.y, r9.w  // f4Col3<1:NaN:Inf>
  mov r10.w, -r25.z
  add r10.w, r10.w, r24.z
  mul r0.y, r0.y, r10.w
  add r0.y, r25.z, r0.y  // f4Col3<2:NaN:Inf>

#line 560
  mov r10.w, -r5.w
  add r8.w, r8.w, r10.w
  mul r8.w, r0.z, r8.w
  add r6.x, r5.w, r8.w  // f4TexCol<0:NaN:Inf>
  mov r5.w, -r6.w
  add r5.w, r5.w, r9.w
  mul r5.w, r0.z, r5.w
  add r6.y, r6.w, r5.w  // f4TexCol<1:NaN:Inf>
  mov r5.w, -r7.w
  add r0.y, r0.y, r5.w
  mul r0.y, r0.z, r0.y
  add r6.z, r7.w, r0.y  // f4TexCol<2:NaN:Inf>
  mov r1.x, r1.x  // f4TexCol<3:NaN:Inf>

#line 504
endif 

#line 567
ine r0.y, l(0, 0, 0, 0), cb1[5].x
if_nz r0.y
  ine r0.y, l(0, 0, 0, 0), cb1[17].x
  if_nz r0.y
    mov r23.xyz, cb1[0].xyzx  // f4Glow<0,1,2>
  else 

#line 573
    ine r0.y, l(0, 0, 0, 0), cb1[9].x
    if_nz r0.y
      mov r24.xyz, -r3.xyzx
      add r24.xyz, r24.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      max r24.xyz, r24.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r24.xyz, r24.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r23.xyz, r1.yzwy, r24.xyzx  // f4Glow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    else 

#line 576
      mov r24.xyz, -r3.xyzx
      add r24.xyz, r24.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      max r24.xyz, r24.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r24.xyz, r24.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r23.xyz, r7.xyzx, r24.xyzx  // f4Glow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 573
    endif 

#line 569
  endif 
else 

#line 580
  mov r23.xyz, l(0,0,0,0)  // f4Glow<0: 0f,1: 0f,2: 0f>

#line 567
endif 

#line 582
ine r0.y, l(0, 0, 0, 0), cb1[16].x
if_nz r0.y
  mul r6.xyz, r3.xyzx, r6.xyzx  // f4TexCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
endif 

#line 586
add r6.xyz, r6.xyzx, cb1[0].xyzx
add r6.xyz, r23.xyzx, r6.xyzx
add r6.xyz, r2.xyzx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 589
ine r0.y, l(0, 0, 0, 0), cb1[19].x
if_nz r0.y

#line 597
  mov r7.xyz, -r9.xyzx
  add r7.xyz, r7.xyzx, r8.xyzx
  mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r7.xyz, r7.xyzx, r9.xyzx
  div r7.xyz, r7.xyzx, cb1[2].wwww
  dp3 r0.y, r6.xyzx, r6.xyzx
  sqrt r0.y, r0.y
  mul r0.y, r0.y, r0.y
  mul r7.xyz, r0.yyyy, r7.xyzx
  add r6.xyz, r6.xyzx, r7.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 589
endif 

#line 602
if_nz r4.y
  max r0.y, r1.x, l(0.000000)
  min r0.y, r0.y, l(1.000000)
  mov r0.z, -cb1[1].w
  add r0.z, r0.z, l(1.000000)
  mul r0.y, r0.z, r0.y
  add r6.w, r0.y, cb1[0].w  // f4ColorOut<3:Inf>
else 

#line 605
  mov r6.w, cb1[0].w  // f4ColorOut<3>

#line 602
endif 

#line 608
ine r0.y, l(0, 0, 0, 0), cb1[21].x
and r0.y, r0.w, r0.y
and r0.x, r0.x, r0.y
if_nz r0.x

#line 614
  if_nz v28.x
    mov r0.x, v28.x  // input<110:[1u,4294967295u]>
    mov r0.yzw, v8.xxyz  // alLight<4,5,6>
    mov r0.yzw, r0.yyzw  // f3LightColor<0,1,2>
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      nop 
      mov r0.y, r0.y  // f3LampColor<0:[0.01f,3.40282e+038f]>
      mov r0.zw, r0.zzzw  // f3LampColor<1,2>
      mov r7.xyz, cb1[0].xyzx  // f3AmbiColor<0,1,2>
      mov r8.xyz, r3.xyzx  // f3DiffColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>

#line 264
      mul r0.yzw, r0.yyzw, r10.xxyz
      mul r0.yzw, r7.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r13.xxyz  // f3nspec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      add r0.yzw, r0.yyzw, r8.xxyz  // texBRDF<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 622
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 614
  endif 
  if_nz r4.x
    mov r0.x, v28.x  // input<110:[2u,4294967295u]>
    mov r0.yzw, v14.xxyz  // alLight<4,5,6>
    mov r0.yzw, r0.yyzw  // f3LightColor<0,1,2>
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      nop 
      mov r0.y, r0.y  // f3LampColor<0:[0.01f,3.40282e+038f]>
      mov r0.zw, r0.zzzw  // f3LampColor<1,2>
      mov r7.xyz, cb1[0].xyzx  // f3AmbiColor<0,1,2>
      mov r8.xyz, r3.xyzx  // f3DiffColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>

#line 264
      mul r0.yzw, r0.yyzw, r16.xxyz
      mul r0.yzw, r7.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r17.xxyz  // f3nspec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      add r0.yzw, r0.yyzw, r8.xxyz  // texBRDF<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 622
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 614
  endif 
  if_nz r4.w
    mov r0.x, v28.x  // input<110:[3u,4294967295u]>
    mov r0.yzw, v19.xxyz  // alLight<4,5,6>
    mov r0.yzw, r0.yyzw  // f3LightColor<0,1,2>
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      nop 
      mov r0.y, r0.y  // f3LampColor<0:[0.01f,3.40282e+038f]>
      mov r0.zw, r0.zzzw  // f3LampColor<1,2>
      mov r7.xyz, cb1[0].xyzx  // f3AmbiColor<0,1,2>
      mov r8.xyz, r3.xyzx  // f3DiffColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>

#line 264
      mul r0.yzw, r0.yyzw, r19.xxyz
      mul r0.yzw, r7.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r20.xxyz  // f3nspec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      add r0.yzw, r0.yyzw, r8.xxyz  // texBRDF<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 622
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 614
  endif 
  if_nz r4.z
    mov r0.x, v28.x  // input<110:[4u,4294967295u]>
    mov r0.yzw, v24.xxyz  // alLight<4,5,6>
    mov r0.yzw, r0.yyzw  // f3LightColor<0,1,2>
    lt r1.x, l(0.010000), r0.y
    if_nz r1.x
      nop 
      mov r0.y, r0.y  // f3LampColor<0:[0.01f,3.40282e+038f]>
      mov r0.zw, r0.zzzw  // f3LampColor<1,2>
      mov r7.xyz, cb1[0].xyzx  // f3AmbiColor<0,1,2>
      mov r3.xyz, r3.xyzx  // f3DiffColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>

#line 264
      mul r0.yzw, r0.yyzw, r12.xxyz
      mul r0.yzw, r7.xxyz, r0.yyzw
      add r0.yzw, r0.yyzw, r22.xxyz  // f3nspec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      add r0.yzw, r0.yyzw, r3.xxyz  // texBRDF<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 622
      utof r0.x, r0.x
      div r1.x, l(20.000000), cb1[3].y
      mul r0.x, r0.x, r1.x
      div r0.xyz, r0.yzwy, r0.xxxx
      add r6.xyz, r0.xyzx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 614
  endif 

#line 608
endif 

#line 627
ine r0.x, l(0, 0, 0, 0), cb1[22].x
if_nz r0.x
  mov r0.x, cb1[3].x  // fMaterialThickness<0>
  mov r0.y, cb1[3].z  // fRimScalar<0>
  mov r0.z, cb1[2].x  // fExtinctionCoefficientRed<0>
  mov r0.w, cb1[2].y  // fExtinctionCoefficientGreen<0>
  mov r1.x, cb1[2].z  // fExtinctionCoefficientBlue<0>
  mov r2.xyz, r2.xyzx  // f3SpecColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r1.yzw, r1.yyzw  // f4TexColor<0:Inf,1:Inf,2:Inf>
  dp3 r3.x, r21.xyzx, r21.xyzx
  sqrt r3.x, r3.x  // fThickValue<0:NaN:Inf>

#line 644
  if_nz v28.x
    mov r7.xyzw, v12.xyzw  // alLight<18,19,20,21>
    mov r8.xyz, v7.yzwy  // alLight<1,2,3>
    mov r9.xyz, v8.xyzx  // alLight<4,5,6>
    mov r3.y, v11.x  // alLight<17>
    dp3 r3.z, r8.xyzx, r8.xyzx
    rsq r3.z, r3.z
    mul r8.xyz, r3.zzzz, r8.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyzw, r7.xyzw  // f4LightPos<0,1,2,3>
    mov r9.xyz, r9.xyzx  // f4LightCol<0,1,2>
    mov r10.xyzw, -v6.xyzw
    add r7.xyzw, r7.xyzw, r10.xyzw
    dp4 r3.z, r7.xyzw, r7.xyzw
    sqrt r3.z, r3.z
    div r3.z, l(1.000000), r3.z
    mul r3.z, r3.z, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r4.y, r3.z, l(1.000000)
    if_nz r4.y
      mov r3.z, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 658
    nop 
    mov r8.xyz, r8.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r4.y, r8.xyzx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r4.y, r4.y, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.y, r4.y, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.y, r4.y  // HalfLambert<0:NaN:Inf>

#line 658
    mul r7.xyz, r3.zzzz, r4.yyyy  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r10.xyz, -r14.xyzx
    dp3 r4.y, r10.xyzx, r8.xyzx
    max r4.y, r4.y, l(0.000000)
    mul r10.xyz, r0.xxxx, r4.yyyy  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r12.xyz, -r5.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r4.y, r12.xyzx, r8.xyzx  // fProduct<0:NaN:Inf>
    mul r4.y, r4.y, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.y, r4.y, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.y, r4.y  // HalfLambert<0:NaN:Inf>

#line 661
    mul r4.y, r0.x, r4.y
    add r10.xyz, r4.yyyy, r10.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r10.xyz, r3.zzzz, r10.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.x, r0.z, r10.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r12.y, r0.w, r10.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r12.z, r1.x, r10.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r10.xyz, r3.xxxx, r12.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.y, r14.xyzx, r5.xyzx
    max r4.y, r4.y, l(0.000000)
    mov r4.y, -r4.y
    add r12.xyz, r4.yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.xyz, r12.xyzx, r12.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.y, r14.xyzx, r8.xyzx
    max r4.y, r4.y, l(0.000000)
    mul r13.xyz, r2.xyzx, r4.yyyy
    mul r12.xyz, r12.xyzx, r13.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 672
    mul r7.xyz, r1.yzwy, r7.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r7.xyz, r10.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r13.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r12.xyz, r0.yyyy, r12.xyzx
    mul r12.xyz, r3.zzzz, r12.xyzx
    mul r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r12.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 245
    add r8.xyz, r8.xyzx, r14.xyzx
    dp3 r4.y, r8.xyzx, r8.xyzx
    rsq r4.y, r4.y
    mul r8.xyz, r4.yyyy, r8.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.y, r14.xyzx, r8.xyzx
    max r4.y, r4.y, l(0.000000)
    min r4.y, r4.y, l(1.000000)
    mul r4.y, r4.y, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 677
    mul r3.z, r3.z, r4.y
    mul r8.xyz, r2.xyzx, r3.zzzz
    mul r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r7.xyz, r7.xyzx, r8.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r13.xyz, r9.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 681
    ieq r3.y, r3.y, l(3)
    if_nz r3.y
      mul r6.xyzw, r6.xyzw, r13.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r3.y, r3.w, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r3.y, r3.y, l(0.800000)
      lt r3.z, l(2.000000), r0.x
      and r3.y, r3.z, r3.y
      if_nz r3.y
        mov r10.xyz, r10.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 
        mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 681
    else 
      mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    endif 

#line 644
  else 
    mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  endif 
  mov r10.w, r6.w  // f4ColorOut<3:Inf>
  if_nz r4.x
    mov r7.xyzw, v17.xyzw  // alLight<18,19,20,21>
    mov r8.xyz, v14.xyzx  // alLight<4,5,6>
    mov r3.y, v16.y  // alLight<17>
    dp3 r3.z, r11.xyzx, r11.xyzx
    rsq r3.z, r3.z
    mul r9.xyz, r3.zzzz, r11.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyzw, r7.xyzw  // f4LightPos<0,1,2,3>
    mov r8.xyz, r8.xyzx  // f4LightCol<0,1,2>
    mov r11.xyzw, -v6.xyzw
    add r7.xyzw, r7.xyzw, r11.xyzw
    dp4 r3.z, r7.xyzw, r7.xyzw
    sqrt r3.z, r3.z
    div r3.z, l(1.000000), r3.z
    mul r3.z, r3.z, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r4.x, r3.z, l(1.000000)
    if_nz r4.x
      mov r3.z, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 658
    nop 
    mov r9.xyz, r9.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r4.x, r9.xyzx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.x, r4.x  // HalfLambert<0:NaN:Inf>

#line 658
    mul r7.xyz, r3.zzzz, r4.xxxx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r11.xyz, -r14.xyzx
    dp3 r4.x, r11.xyzx, r9.xyzx
    max r4.x, r4.x, l(0.000000)
    mul r11.xyz, r0.xxxx, r4.xxxx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r12.xyz, -r5.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r4.x, r12.xyzx, r9.xyzx  // fProduct<0:NaN:Inf>
    mul r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.x, r4.x  // HalfLambert<0:NaN:Inf>

#line 661
    mul r4.x, r0.x, r4.x
    add r11.xyz, r4.xxxx, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.xyz, r3.zzzz, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.x, r0.z, r11.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r12.y, r0.w, r11.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r12.z, r1.x, r11.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r11.xyz, r3.xxxx, r12.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r14.xyzx, r5.xyzx
    max r4.x, r4.x, l(0.000000)
    mov r4.x, -r4.x
    add r12.xyz, r4.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.xyz, r12.xyzx, r12.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r14.xyzx, r9.xyzx
    max r4.x, r4.x, l(0.000000)
    mul r13.xyz, r2.xyzx, r4.xxxx
    mul r12.xyz, r12.xyzx, r13.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 672
    mul r7.xyz, r1.yzwy, r7.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r7.xyz, r11.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r13.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r12.xyz, r0.yyyy, r12.xyzx
    mul r12.xyz, r3.zzzz, r12.xyzx
    mul r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r12.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 245
    add r9.xyz, r9.xyzx, r14.xyzx
    dp3 r4.x, r9.xyzx, r9.xyzx
    rsq r4.x, r4.x
    mul r9.xyz, r4.xxxx, r9.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r4.x, r14.xyzx, r9.xyzx
    max r4.x, r4.x, l(0.000000)
    min r4.x, r4.x, l(1.000000)
    mul r4.x, r4.x, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 677
    mul r3.z, r3.z, r4.x
    mul r9.xyz, r2.xyzx, r3.zzzz
    mul r9.xyz, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r9.xyz, r9.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r7.xyz, r7.xyzx, r9.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r13.xyz, r8.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 681
    ieq r3.y, r3.y, l(3)
    if_nz r3.y
      mul r6.xyzw, r10.xyzw, r13.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r3.y, r3.w, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r3.y, r3.y, l(0.800000)
      lt r3.z, l(2.000000), r0.x
      and r3.y, r3.z, r3.y
      if_nz r3.y
        mov r10.xyz, r11.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 
        mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 681
    else 
      mov r6.w, r10.w  // f4ColorOut<3:Inf>
    endif 

#line 644
  endif 
  mov r10.w, r6.w  // f4ColorOut<3:Inf>
  if_nz r4.w
    mov r7.xyzw, v22.xyzw  // alLight<18,19,20,21>
    mov r4.xyw, v19.xyxz  // alLight<4,5,6>
    mov r3.y, v21.z  // alLight<17>
    dp3 r3.z, r15.xyzx, r15.xyzx
    rsq r3.z, r3.z
    mul r8.xyz, r3.zzzz, r15.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyzw, r7.xyzw  // f4LightPos<0,1,2,3>
    mov r4.xyw, r4.xyxw  // f4LightCol<0,1,2>
    mov r9.xyzw, -v6.xyzw
    add r7.xyzw, r7.xyzw, r9.xyzw
    dp4 r3.z, r7.xyzw, r7.xyzw
    sqrt r3.z, r3.z
    div r3.z, l(1.000000), r3.z
    mul r3.z, r3.z, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r5.w, r3.z, l(1.000000)
    if_nz r5.w
      mov r3.z, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 658
    nop 
    mov r8.xyz, r8.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r5.w, r8.xyzx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r5.w, r5.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r5.w, r5.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r5.w, r5.w  // HalfLambert<0:NaN:Inf>

#line 658
    mul r7.xyz, r3.zzzz, r5.wwww  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r9.xyz, -r14.xyzx
    dp3 r5.w, r9.xyzx, r8.xyzx
    max r5.w, r5.w, l(0.000000)
    mul r9.xyz, r0.xxxx, r5.wwww  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r11.xyz, -r5.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r5.w, r11.xyzx, r8.xyzx  // fProduct<0:NaN:Inf>
    mul r5.w, r5.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r5.w, r5.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r5.w, r5.w  // HalfLambert<0:NaN:Inf>

#line 661
    mul r5.w, r0.x, r5.w
    add r9.xyz, r5.wwww, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r9.xyz, r3.zzzz, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.x, r0.z, r9.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r11.y, r0.w, r9.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r11.z, r1.x, r9.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r9.xyz, r3.xxxx, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.w, r14.xyzx, r5.xyzx
    max r5.w, r5.w, l(0.000000)
    mov r5.w, -r5.w
    add r11.xyz, r5.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.xyz, r11.xyzx, r11.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.w, r14.xyzx, r8.xyzx
    max r5.w, r5.w, l(0.000000)
    mul r12.xyz, r2.xyzx, r5.wwww
    mul r11.xyz, r11.xyzx, r12.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 672
    mul r7.xyz, r1.yzwy, r7.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r7.xyz, r9.xyzx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r12.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r11.xyz, r0.yyyy, r11.xyzx
    mul r11.xyz, r3.zzzz, r11.xyzx
    mul r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r11.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 245
    add r8.xyz, r8.xyzx, r14.xyzx
    dp3 r5.w, r8.xyzx, r8.xyzx
    rsq r5.w, r5.w
    mul r8.xyz, r5.wwww, r8.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r5.w, r14.xyzx, r8.xyzx
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)
    mul r5.w, r5.w, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 677
    mul r3.z, r3.z, r5.w
    mul r8.xyz, r2.xyzx, r3.zzzz
    mul r8.xyz, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r8.xyz, r8.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r7.xyz, r7.xyzx, r8.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r12.xyz, r4.xywx, r7.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 681
    ieq r3.y, r3.y, l(3)
    if_nz r3.y
      mul r6.xyzw, r10.xyzw, r12.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r3.y, r3.w, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r3.y, r3.y, l(0.800000)
      lt r3.z, l(2.000000), r0.x
      and r3.y, r3.z, r3.y
      if_nz r3.y
        mov r10.xyz, r9.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      else 
        mov r10.xyz, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 681
    else 
      mov r6.w, r10.w  // f4ColorOut<3:Inf>
    endif 

#line 644
  endif 
  mov r10.w, r6.w  // f4ColorOut<3:Inf>
  if_nz r4.z
    mov r4.xyzw, v27.xyzw  // alLight<18,19,20,21>
    mov r7.xyz, v24.xyzx  // alLight<4,5,6>
    mov r3.y, v26.w  // alLight<17>
    dp3 r3.z, r18.xyzx, r18.xyzx
    rsq r3.z, r3.z
    mul r8.xyz, r3.zzzz, r18.xyzx  // f3LightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r4.xyzw, r4.xyzw  // f4LightPos<0,1,2,3>
    mov r7.xyz, r7.xyzx  // f4LightCol<0,1,2>
    mov r9.xyzw, -v6.xyzw
    add r4.xyzw, r4.xyzw, r9.xyzw
    dp4 r3.z, r4.xyzw, r4.xyzw
    sqrt r3.z, r3.z
    div r3.z, l(1.000000), r3.z
    mul r3.z, r3.z, l(10.000000)  // fAttenuation<0:NaN:Inf>
    lt r4.x, r3.z, l(1.000000)
    if_nz r4.x
      mov r3.z, l(1.000000)  // fAttenuation<0: 1f>
    endif 

#line 658
    nop 
    mov r8.xyz, r8.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r4.x, r8.xyzx, r14.xyzx  // fProduct<0:NaN:Inf>
    mul r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.x, r4.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.x, r4.x  // HalfLambert<0:NaN:Inf>

#line 658
    mul r4.xyz, r3.zzzz, r4.xxxx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r9.xyz, -r14.xyzx
    dp3 r4.w, r9.xyzx, r8.xyzx
    max r4.w, r4.w, l(0.000000)
    mul r9.xyz, r0.xxxx, r4.wwww  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r11.xyz, -r5.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 237
    dp3 r4.w, r11.xyzx, r8.xyzx  // fProduct<0:NaN:Inf>
    mul r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    add r4.w, r4.w, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r4.w, r4.w  // HalfLambert<0:NaN:Inf>

#line 661
    mul r4.w, r0.x, r4.w
    add r9.xyz, r4.wwww, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r9.xyz, r3.zzzz, r9.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.x, r0.z, r9.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r11.y, r0.w, r9.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r11.z, r1.x, r9.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r9.xyz, r3.xxxx, r11.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r0.z, r14.xyzx, r5.xyzx
    max r0.z, r0.z, l(0.000000)
    mov r0.z, -r0.z
    add r5.xyz, r0.zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r5.xyz, r5.xyzx, r5.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r0.z, r14.xyzx, r8.xyzx
    max r0.z, r0.z, l(0.000000)
    mul r11.xyz, r2.xyzx, r0.zzzz
    mul r5.xyz, r5.xyzx, r11.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 672
    mul r1.xyz, r1.yzwy, r4.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r1.xyz, r9.xyzx, r1.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r4.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r0.yzw, r0.yyyy, r5.xxyz
    mul r0.yzw, r3.zzzz, r0.yyzw
    mul r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    add r0.yzw, r0.yyzw, r1.xxyz  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 245
    add r1.xyz, r8.xyzx, r14.xyzx
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r1.xyz, r1.wwww, r1.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r1.x, r14.xyzx, r1.xyzx
    max r1.x, r1.x, l(0.000000)
    min r1.x, r1.x, l(1.000000)
    mul r1.x, r1.x, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 677
    mul r1.x, r3.z, r1.x
    mul r1.xyz, r2.xyzx, r1.xxxx
    mul r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r1.xyz, r1.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000)
    add r0.yzw, r0.yyzw, r1.xxyz  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r4.xyz, r7.xyzx, r0.yzwy  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 681
    ieq r0.y, r3.y, l(3)
    if_nz r0.y
      mul r6.xyzw, r4.xyzw, r10.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:Inf>
      max r0.y, r3.w, l(0.000000)  // fEdge<0:NaN:Inf>
      lt r0.y, r0.y, l(0.800000)
      lt r0.x, l(2.000000), r0.x
      and r0.x, r0.x, r0.y
      if_nz r0.x
        mov r6.xyz, r9.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      endif 

#line 681
    else 
      mov r6.xyz, r10.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
      mov r6.w, r10.w  // f4ColorOut<3:Inf>
    endif 

#line 644
  else 
    mov r6.xyz, r10.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  endif 

#line 627
endif 

#line 692
ine r0.x, l(0, 0, 0, 0), cb2[7].x
if_nz r0.x
  mul r6.xyzw, r6.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3>
endif 

#line 696
ine r0.x, l(0, 0, 0, 0), cb2[9].x
if_nz r0.x
  max r0.x, r3.w, l(0.000000)  // fEdge<0:NaN:Inf>
  lt r0.x, r0.x, cb2[0].w
  if_nz r0.x
    mov r6.xyz, cb2[0].xyzx  // f4ColorOut<0,1,2>
  endif 

#line 696
endif 

#line 703
ine r0.x, l(0, 0, 0, 0), cb2[12].x
if_nz r0.x
  sqrt r0.x, r2.w
  div r0.x, r0.x, cb2[1].w
  add r6.xyz, r0.xxxx, r6.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
endif 

#line 708
ine r0.x, l(0, 0, 0, 0), cb2[6].x
if_nz r0.x
  dp4 r0.x, r6.xyzw, cb2[2].xyzw  // f4ColorOut<0:NaN:Inf>
  dp4 r0.y, r6.xyzw, cb2[3].xyzw  // f4ColorOut<1:NaN:Inf>
  dp4 r0.z, r6.xyzw, cb2[4].xyzw  // f4ColorOut<2:NaN:Inf>
  dp4 r0.w, r6.xyzw, cb2[5].xyzw  // f4ColorOut<3:NaN:Inf>
  mov r6.xyzw, r0.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
endif 

#line 718
mov o0.xyzw, r6.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
ret 
// Approximately 2490 instruction slots used
